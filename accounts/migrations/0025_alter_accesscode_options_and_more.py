# Generated by Django 4.2.4 on 2023-08-29 23:22

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0024_accesscode_date_used'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='accesscode',
            options={'ordering': ['-created'], 'verbose_name': 'access code', 'verbose_name_plural': 'access codes'},
        ),
        migrations.AlterModelOptions(
            name='affiliateinvitee',
            options={'ordering': ['-id'], 'verbose_name': 'affiliate invitee', 'verbose_name_plural': 'affiliate invitees'},
        ),
        migrations.AlterModelOptions(
            name='affiliatepayment',
            options={'ordering': ['-created'], 'verbose_name': 'affiliate payment', 'verbose_name_plural': 'affiliate payments'},
        ),
        migrations.AlterModelOptions(
            name='coinplan',
            options={'ordering': ['-created'], 'verbose_name': 'coin plan', 'verbose_name_plural': 'coin plans'},
        ),
        migrations.AlterModelOptions(
            name='coinsubscription',
            options={'get_latest_by': ['-created'], 'ordering': ['-created'], 'verbose_name': 'coin subscription', 'verbose_name_plural': 'coin subscriptions'},
        ),
        migrations.AlterModelOptions(
            name='paymentdetail',
            options={'verbose_name': 'payment detail'},
        ),
        migrations.AlterModelOptions(
            name='server',
            options={'ordering': ['-created'], 'verbose_name': 'server', 'verbose_name_plural': 'servers'},
        ),
        migrations.AlterModelOptions(
            name='serverowner',
            options={'ordering': ['-created'], 'verbose_name': 'serverowner', 'verbose_name_plural': 'serverowners'},
        ),
        migrations.AlterModelOptions(
            name='stripeplan',
            options={'ordering': ['-created'], 'verbose_name': 'stripe plan', 'verbose_name_plural': 'stripe plans'},
        ),
        migrations.AlterModelOptions(
            name='subscriber',
            options={'ordering': ['-created'], 'verbose_name': 'subscriber', 'verbose_name_plural': 'subscribers'},
        ),
        migrations.AlterModelOptions(
            name='subscription',
            options={'get_latest_by': ['-created'], 'ordering': ['-created'], 'verbose_name': 'stripe subscription', 'verbose_name_plural': 'stripe subscriptions'},
        ),
        migrations.RemoveField(
            model_name='coinsubscription',
            name='qrcode_url',
        ),
        migrations.RemoveField(
            model_name='serverowner',
            name='coinbase_api_public_key',
        ),
        migrations.RemoveField(
            model_name='serverowner',
            name='coinbase_api_secret_key',
        ),
        migrations.RemoveField(
            model_name='serverowner',
            name='coinbase_onboarding',
        ),
        migrations.AddField(
            model_name='serverowner',
            name='coinpayment_api_public_key',
            field=models.CharField(blank=True, help_text='Coinpayment API public key of the serverowner.', max_length=255, null=True, verbose_name='coinpayment api public key'),
        ),
        migrations.AddField(
            model_name='serverowner',
            name='coinpayment_api_secret_key',
            field=models.CharField(blank=True, help_text='Coinpayment API secret key of the serverowner.', max_length=255, null=True, verbose_name='coinpayment api secret key'),
        ),
        migrations.AddField(
            model_name='serverowner',
            name='coinpayment_onboarding',
            field=models.BooleanField(default=False, help_text='If this Serverowner onboarded via coinpayment.', verbose_name='coinpayment onboarding'),
        ),
        migrations.AlterField(
            model_name='accesscode',
            name='code',
            field=models.CharField(help_text='The unique access code value.', max_length=5, unique=True, verbose_name='code'),
        ),
        migrations.AlterField(
            model_name='accesscode',
            name='date_used',
            field=models.DateTimeField(blank=True, help_text='The date and time the access code was used.', null=True, verbose_name='date used'),
        ),
        migrations.AlterField(
            model_name='accesscode',
            name='is_used',
            field=models.BooleanField(default=False, help_text='Whether the access code has been used.', verbose_name='is used?'),
        ),
        migrations.AlterField(
            model_name='accesscode',
            name='used_by',
            field=models.ForeignKey(blank=True, help_text='The serverowner who used the access code.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.serverowner', verbose_name='used by'),
        ),
        migrations.AlterField(
            model_name='affiliate',
            name='affiliate_link',
            field=models.CharField(blank=True, help_text='The unique affiliate link.', max_length=255, null=True, unique=True, verbose_name='affiliate link'),
        ),
        migrations.AlterField(
            model_name='affiliate',
            name='discord_id',
            field=models.CharField(help_text='Discord ID of the affiliate.', max_length=255, primary_key=True, serialize=False, verbose_name='discord id'),
        ),
        migrations.AlterField(
            model_name='affiliate',
            name='last_payment_date',
            field=models.DateTimeField(blank=True, help_text='The date and time of the last payment to the affiliate.', null=True, verbose_name='last payment date'),
        ),
        migrations.AlterField(
            model_name='affiliate',
            name='pending_coin_commissions',
            field=models.DecimalField(decimal_places=8, default=0, help_text='Pending coin commissions to be paid to the affiliate.', max_digits=20, verbose_name='pending coin commissions'),
        ),
        migrations.AlterField(
            model_name='affiliate',
            name='pending_commissions',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Pending commissions to be paid to the affiliate.', max_digits=9, verbose_name='pending commissions'),
        ),
        migrations.AlterField(
            model_name='affiliate',
            name='server_id',
            field=models.CharField(help_text='The ID of the server associated with the affiliate.', max_length=255, verbose_name='server id'),
        ),
        migrations.AlterField(
            model_name='affiliate',
            name='serverowner',
            field=models.ForeignKey(help_text='The server owner associated with the affiliate.', on_delete=django.db.models.deletion.CASCADE, to='accounts.serverowner', verbose_name='server owner'),
        ),
        migrations.AlterField(
            model_name='affiliate',
            name='subscriber',
            field=models.OneToOneField(help_text='The subscriber associated with the affiliate.', on_delete=django.db.models.deletion.CASCADE, to='accounts.subscriber', verbose_name='subscriber'),
        ),
        migrations.AlterField(
            model_name='affiliate',
            name='total_coin_commissions_paid',
            field=models.DecimalField(decimal_places=8, default=0, help_text='Total coin commissions paid to the affiliate.', max_digits=20, verbose_name='total coin commissions paid'),
        ),
        migrations.AlterField(
            model_name='affiliate',
            name='total_commissions_paid',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Total commissions paid to the affiliate.', max_digits=9, validators=[django.core.validators.MinValueValidator(0)], verbose_name='total commissions paid'),
        ),
        migrations.AlterField(
            model_name='affiliateinvitee',
            name='affiliate',
            field=models.ForeignKey(help_text='The affiliate who invited the user.', on_delete=django.db.models.deletion.CASCADE, to='accounts.affiliate', verbose_name='affiliate'),
        ),
        migrations.AlterField(
            model_name='affiliateinvitee',
            name='invitee_discord_id',
            field=models.CharField(help_text='Discord ID of the Invitee.', max_length=255, unique=True, verbose_name='invitee discord id'),
        ),
        migrations.AlterField(
            model_name='affiliatepayment',
            name='affiliate',
            field=models.ForeignKey(help_text='Discord ID of the Affiliate to be paid.', on_delete=django.db.models.deletion.CASCADE, to='accounts.affiliate', verbose_name='affiliate'),
        ),
        migrations.AlterField(
            model_name='affiliatepayment',
            name='amount',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='The dollar commission to be paid.', max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='amount'),
        ),
        migrations.AlterField(
            model_name='affiliatepayment',
            name='coin_amount',
            field=models.DecimalField(blank=True, decimal_places=8, help_text='The coin commission to be paid.', max_digits=20, null=True, verbose_name='coin amount'),
        ),
        migrations.AlterField(
            model_name='affiliatepayment',
            name='date_payment_confirmed',
            field=models.DateTimeField(blank=True, help_text='Date the serverowner made payment.', null=True, verbose_name='date payment confirmed'),
        ),
        migrations.AlterField(
            model_name='affiliatepayment',
            name='paid',
            field=models.BooleanField(default=False, help_text='If this payment has been made.', verbose_name='paid'),
        ),
        migrations.AlterField(
            model_name='affiliatepayment',
            name='serverowner',
            field=models.ForeignKey(help_text='The serverowner who is to pay the affiliate.', on_delete=django.db.models.deletion.CASCADE, to='accounts.serverowner', verbose_name='serverowner'),
        ),
        migrations.AlterField(
            model_name='affiliatepayment',
            name='subscriber',
            field=models.ForeignKey(help_text='The Affiliate Invitee who subscribed.', on_delete=django.db.models.deletion.CASCADE, to='accounts.subscriber', verbose_name='subscriber'),
        ),
        migrations.AlterField(
            model_name='coinplan',
            name='amount',
            field=models.DecimalField(decimal_places=2, help_text='The amount in dollars for the plan.', max_digits=9, verbose_name='amount'),
        ),
        migrations.AlterField(
            model_name='coinplan',
            name='description',
            field=models.TextField(help_text='Description of the plan (up to 300 characters).', max_length=300, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='coinplan',
            name='discord_role_id',
            field=models.CharField(help_text='The ID of the Discord role assigned to subscribers.', max_length=255, verbose_name='discord role id'),
        ),
        migrations.AlterField(
            model_name='coinplan',
            name='interval_count',
            field=models.IntegerField(help_text='The number of months the plan should last.', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='interval count'),
        ),
        migrations.AlterField(
            model_name='coinplan',
            name='name',
            field=models.CharField(help_text='The name of the coin plan.', max_length=100, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='coinplan',
            name='permission_description',
            field=models.CharField(blank=True, help_text='The description of permissions given to subscribers.', max_length=255, null=True, verbose_name='permission description'),
        ),
        migrations.AlterField(
            model_name='coinplan',
            name='serverowner',
            field=models.ForeignKey(help_text='The serverowner who created the plan.', on_delete=django.db.models.deletion.CASCADE, related_name='coin_plans', to='accounts.serverowner', verbose_name='serverowner'),
        ),
        migrations.AlterField(
            model_name='coinplan',
            name='status',
            field=models.CharField(choices=[('A', 'Active'), ('I', 'Inactive')], default='A', help_text='Status of the plan.', max_length=1, verbose_name='status'),
        ),
        migrations.AlterField(
            model_name='coinplan',
            name='subscriber_count',
            field=models.IntegerField(default=0, help_text='Number of subscriptions to this plan.', verbose_name='subscriber count'),
        ),
        migrations.AlterField(
            model_name='coinsubscription',
            name='address',
            field=models.CharField(blank=True, help_text='The Litecoin address associated with the subscription.', max_length=225, null=True, verbose_name='address'),
        ),
        migrations.AlterField(
            model_name='coinsubscription',
            name='checkout_url',
            field=models.CharField(blank=True, help_text='The CoinPayment URL for subscriber redirection.', max_length=225, null=True, verbose_name='checkout url'),
        ),
        migrations.AlterField(
            model_name='coinsubscription',
            name='coin_amount',
            field=models.DecimalField(blank=True, decimal_places=8, help_text='The litecoin value associated with the subscription.', max_digits=20, null=True, verbose_name='coin amount'),
        ),
        migrations.AlterField(
            model_name='coinsubscription',
            name='expiration_date',
            field=models.DateTimeField(blank=True, help_text='The date and time when the subscription will expire.', null=True, verbose_name='expiration date'),
        ),
        migrations.AlterField(
            model_name='coinsubscription',
            name='plan',
            field=models.ForeignKey(help_text='The coin plan being subscribed to.', on_delete=django.db.models.deletion.CASCADE, to='accounts.coinplan', verbose_name='plan'),
        ),
        migrations.AlterField(
            model_name='coinsubscription',
            name='status',
            field=models.CharField(choices=[('A', 'Active'), ('P', 'Pending'), ('E', 'Expired'), ('C', 'Canceled')], default='P', help_text='The status of the subscription.', max_length=1, verbose_name='status'),
        ),
        migrations.AlterField(
            model_name='coinsubscription',
            name='status_url',
            field=models.CharField(blank=True, help_text='The URL for accessing transaction status information.', max_length=225, null=True, verbose_name='status url'),
        ),
        migrations.AlterField(
            model_name='coinsubscription',
            name='subscribed_via',
            field=models.ForeignKey(help_text='The server owner for whom this subscription is intended.', on_delete=django.db.models.deletion.CASCADE, to='accounts.serverowner', verbose_name='subscribed via'),
        ),
        migrations.AlterField(
            model_name='coinsubscription',
            name='subscriber',
            field=models.ForeignKey(help_text='The user subscribing to the coin plan.', on_delete=django.db.models.deletion.CASCADE, related_name='coin_subscriptions', to='accounts.subscriber', verbose_name='subscriber'),
        ),
        migrations.AlterField(
            model_name='coinsubscription',
            name='subscription_date',
            field=models.DateTimeField(blank=True, help_text='The date and time when the subscription was initiated.', null=True, verbose_name='subscription date'),
        ),
        migrations.AlterField(
            model_name='coinsubscription',
            name='subscription_id',
            field=models.CharField(blank=True, help_text='The ID of the subscription.', max_length=225, null=True, verbose_name='subscription id'),
        ),
        migrations.AlterField(
            model_name='coinsubscription',
            name='value',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='value'),
        ),
        migrations.AlterField(
            model_name='paymentdetail',
            name='affiliate',
            field=models.OneToOneField(help_text='The affiliate user linked to this payment detail.', on_delete=django.db.models.deletion.CASCADE, to='accounts.affiliate', verbose_name='affiliate'),
        ),
        migrations.AlterField(
            model_name='paymentdetail',
            name='body',
            field=models.TextField(blank=True, help_text='Payment details of the affiliate when registered via Stripe.', null=True, verbose_name='payment information'),
        ),
        migrations.AlterField(
            model_name='paymentdetail',
            name='litecoin_address',
            field=models.CharField(blank=True, help_text='The Litecoin address of the affiliate, used when registered via CoinPayments.', max_length=255, null=True, verbose_name='litecoin address'),
        ),
        migrations.AlterField(
            model_name='server',
            name='choice_server',
            field=models.BooleanField(default=False, help_text='If this is the server the Serverowner onboarded with.', verbose_name='choice server'),
        ),
        migrations.AlterField(
            model_name='server',
            name='icon',
            field=models.CharField(blank=True, help_text='Icon of the server on Discord.', max_length=255, null=True, verbose_name='icon'),
        ),
        migrations.AlterField(
            model_name='server',
            name='name',
            field=models.CharField(help_text='Name of the server.', max_length=100, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='server',
            name='owner',
            field=models.ForeignKey(help_text='The Serverowner who owns this Discord server.', on_delete=django.db.models.deletion.CASCADE, related_name='servers', to='accounts.serverowner', verbose_name='owner'),
        ),
        migrations.AlterField(
            model_name='server',
            name='server_id',
            field=models.CharField(help_text='The Discord ID of the server.', max_length=100, verbose_name='server id'),
        ),
        migrations.AlterField(
            model_name='serverowner',
            name='affiliate_commission',
            field=models.IntegerField(blank=True, help_text='Percentage commission for affiliates.', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='affiliate commission'),
        ),
        migrations.AlterField(
            model_name='serverowner',
            name='avatar',
            field=models.CharField(blank=True, help_text="The ID of the Serverowner's avatar from Discord.", max_length=255, null=True, verbose_name='avatar'),
        ),
        migrations.AlterField(
            model_name='serverowner',
            name='discord_id',
            field=models.CharField(help_text='Discord ID of the Serverowner.', max_length=255, unique=True, verbose_name='discord id'),
        ),
        migrations.AlterField(
            model_name='serverowner',
            name='email',
            field=models.EmailField(help_text='Email address of the Serverowner from Discord.', max_length=254, verbose_name='email'),
        ),
        migrations.AlterField(
            model_name='serverowner',
            name='stripe_account_id',
            field=models.CharField(blank=True, help_text='The stripe account ID of the Serverowner.', max_length=100, null=True, verbose_name='stripe account id'),
        ),
        migrations.AlterField(
            model_name='serverowner',
            name='subdomain',
            field=models.CharField(help_text='The referral name.', max_length=20, verbose_name='subdomain'),
        ),
        migrations.AlterField(
            model_name='serverowner',
            name='total_coin_pending_commissions',
            field=models.DecimalField(decimal_places=8, default=0, help_text='Total pending coin commissions to be paid by the Serverowner.', max_digits=20, verbose_name='total coin pending commissions'),
        ),
        migrations.AlterField(
            model_name='serverowner',
            name='total_pending_commissions',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Total pending dollar commissions to be paid by the Serverowner.', max_digits=9, validators=[django.core.validators.MinValueValidator(0)], verbose_name='total pending commissions'),
        ),
        migrations.AlterField(
            model_name='serverowner',
            name='user',
            field=models.OneToOneField(help_text='The Serverowner.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.AlterField(
            model_name='serverowner',
            name='username',
            field=models.CharField(help_text='The username of the Serverowner from Discord.', max_length=255, unique=True, verbose_name='username'),
        ),
        migrations.AlterField(
            model_name='stripeplan',
            name='amount',
            field=models.DecimalField(decimal_places=2, help_text='The amount in dollars for the plan.', max_digits=9, verbose_name='amount'),
        ),
        migrations.AlterField(
            model_name='stripeplan',
            name='currency',
            field=models.CharField(default='usd', help_text='The currency code used for the plan.', max_length=3, verbose_name='currency'),
        ),
        migrations.AlterField(
            model_name='stripeplan',
            name='description',
            field=models.TextField(help_text='Description of the plan (up to 300 characters).', max_length=300, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='stripeplan',
            name='discord_role_id',
            field=models.CharField(help_text='ID of Discord role to be assigned to subscribers.', max_length=255, verbose_name='discord role id'),
        ),
        migrations.AlterField(
            model_name='stripeplan',
            name='interval_count',
            field=models.IntegerField(help_text='Number of months the plan should last.', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='interval count'),
        ),
        migrations.AlterField(
            model_name='stripeplan',
            name='name',
            field=models.CharField(help_text='The name of the Stripe plan.', max_length=100, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='stripeplan',
            name='permission_description',
            field=models.CharField(blank=True, help_text='Description of permissions to be given to subscribers.', max_length=255, null=True, verbose_name='permission description'),
        ),
        migrations.AlterField(
            model_name='stripeplan',
            name='price_id',
            field=models.CharField(help_text='The price ID associated with the plan.', max_length=100, verbose_name='price id'),
        ),
        migrations.AlterField(
            model_name='stripeplan',
            name='product_id',
            field=models.CharField(help_text='The product ID associated with the plan.', max_length=100, verbose_name='product id'),
        ),
        migrations.AlterField(
            model_name='stripeplan',
            name='status',
            field=models.CharField(choices=[('A', 'Active'), ('I', 'Inactive')], default='A', help_text='Status of the plan.', max_length=1, verbose_name='status'),
        ),
        migrations.AlterField(
            model_name='stripeplan',
            name='subscriber_count',
            field=models.IntegerField(default=0, help_text='The number of subscribers to this plan.', verbose_name='subscriber count'),
        ),
        migrations.AlterField(
            model_name='stripeplan',
            name='user',
            field=models.ForeignKey(help_text='The server owner who created the plan.', on_delete=django.db.models.deletion.CASCADE, related_name='plans', to='accounts.serverowner', verbose_name='user'),
        ),
        migrations.AlterField(
            model_name='subscriber',
            name='avatar',
            field=models.CharField(blank=True, help_text='Avatar URL of the subscriber.', max_length=255, null=True, verbose_name='avatar'),
        ),
        migrations.AlterField(
            model_name='subscriber',
            name='discord_id',
            field=models.CharField(help_text='Discord ID of the subscriber.', max_length=255, unique=True, verbose_name='discord id'),
        ),
        migrations.AlterField(
            model_name='subscriber',
            name='email',
            field=models.EmailField(help_text='Email address of the subscriber.', max_length=254, verbose_name='email'),
        ),
        migrations.AlterField(
            model_name='subscriber',
            name='stripe_customer_id',
            field=models.CharField(blank=True, help_text='Stripe customer ID of the subscriber.', max_length=255, null=True, verbose_name='stripe customer id'),
        ),
        migrations.AlterField(
            model_name='subscriber',
            name='subscribed_via',
            field=models.ForeignKey(blank=True, help_text='The serverowner via which the subscriber is subscribed.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.serverowner', verbose_name='subscribed via'),
        ),
        migrations.AlterField(
            model_name='subscriber',
            name='user',
            field=models.OneToOneField(help_text='The associated user for the subscriber.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.AlterField(
            model_name='subscriber',
            name='username',
            field=models.CharField(help_text='Username of the subscriber.', max_length=255, unique=True, verbose_name='username'),
        ),
        migrations.AlterField(
            model_name='subscription',
            name='expiration_date',
            field=models.DateTimeField(blank=True, help_text='The date and time when the subscription will expire.', null=True, verbose_name='expiration date'),
        ),
        migrations.AlterField(
            model_name='subscription',
            name='plan',
            field=models.ForeignKey(help_text='The Stripe plan being subscribed to.', on_delete=django.db.models.deletion.CASCADE, to='accounts.stripeplan', verbose_name='plan'),
        ),
        migrations.AlterField(
            model_name='subscription',
            name='session_id',
            field=models.CharField(blank=True, help_text='The Stripe checkout session ID associated with this subscription.', max_length=200, null=True, verbose_name='session id'),
        ),
        migrations.AlterField(
            model_name='subscription',
            name='status',
            field=models.CharField(choices=[('A', 'Active'), ('I', 'Inactive'), ('E', 'Expired'), ('C', 'Canceled')], default='I', help_text='The status of the subscription.', max_length=1, verbose_name='status'),
        ),
        migrations.AlterField(
            model_name='subscription',
            name='subscribed_via',
            field=models.ForeignKey(help_text='The serverowner for whom this subscription is intended.', on_delete=django.db.models.deletion.CASCADE, to='accounts.serverowner', verbose_name='subscribed via'),
        ),
        migrations.AlterField(
            model_name='subscription',
            name='subscriber',
            field=models.ForeignKey(help_text='The user subscribing to the plan.', on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='accounts.subscriber', verbose_name='subscriber'),
        ),
        migrations.AlterField(
            model_name='subscription',
            name='subscription_date',
            field=models.DateTimeField(blank=True, help_text='The date and time when the subscription was initiated.', null=True, verbose_name='subscription date'),
        ),
        migrations.AlterField(
            model_name='subscription',
            name='subscription_id',
            field=models.CharField(blank=True, help_text='The Stripe subscription ID associated with this subscription.', max_length=200, null=True, verbose_name='subscription id'),
        ),
        migrations.AlterField(
            model_name='subscription',
            name='value',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='value'),
        ),
    ]
